<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="2400"
   height="1000"
   viewBox="0 0 2400 1000"
   version="1.1"
   id="svg1"
   xml:space="preserve"
   inkscape:version="1.4 (e7c3feb100, 2024-10-09)"
   sodipodi:docname="banner.inkscape.svg"
   inkscape:export-filename="banner.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="0.75098906"
     inkscape:cx="1179.1117"
     inkscape:cy="609.19663"
     inkscape:window-width="3127"
     inkscape:window-height="1280"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" /><defs
     id="defs1"><meshgradient
       inkscape:collect="always"
       id="meshgradient3"
       gradientUnits="userSpaceOnUse"
       x="0"
       y="0"><meshrow
         id="meshrow3"><meshpatch
           id="meshpatch3"><stop
             path="c 800,0  1600,0  2400,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop4" /><stop
             path="c 0,333.333  0,666.667  0,1000"
             style="stop-color:#9dde71;stop-opacity:1"
             id="stop5" /><stop
             path="c -800,0  -1600,0  -2400,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop6" /><stop
             path="c 0,-333.333  0,-666.667  0,-1000"
             style="stop-color:#9dde71;stop-opacity:1"
             id="stop7" /></meshpatch></meshrow></meshgradient></defs><g
     inkscape:label="Calque 1"
     inkscape:groupmode="layer"
     id="layer1"><rect
       style="fill:url(#meshgradient3);fill-opacity:1"
       id="rect1"
       width="2400"
       height="1000"
       x="0"
       y="0" /><g
       id="g1350"
       transform="matrix(0.84015965,0,0,0.84015965,876.18048,-26.956793)"><path
         style="fill:#326ce5;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
         d="m 386.93188,178.59794 a 48.929668,48.529248 0 0 0 -18.75129,4.74509 L 112.30567,305.60274 A 48.929668,48.529248 0 0 0 85.831333,338.52385 L 22.705266,613.15006 a 48.929668,48.529248 0 0 0 6.643127,37.20805 48.929668,48.529248 0 0 0 2.781605,3.86153 L 209.23642,874.42456 a 48.929668,48.529248 0 0 0 38.25525,18.26042 l 284.01821,-0.0654 a 48.929668,48.529248 0 0 0 38.25525,-18.22769 L 746.8061,654.15419 a 48.929668,48.529248 0 0 0 9.45745,-41.06958 L 693.03931,338.4584 A 48.929668,48.529248 0 0 0 666.56498,305.53729 L 410.65734,183.34303 a 48.929668,48.529248 0 0 0 -23.72546,-4.74509 z"
         id="path3055"
         inkscape:connector-curvature="0"
         inkscape:export-filename="new.png"
         inkscape:export-xdpi="250.55"
         inkscape:export-ydpi="250.55" /><path
         inkscape:connector-curvature="0"
         id="path3059"
         d="m 389.46729,272.05685 c -8.45813,8.6e-4 -15.31619,7.61928 -15.31519,17.01687 10e-6,0.14423 0.0295,0.28205 0.0327,0.42542 -0.0125,1.27691 -0.0741,2.81523 -0.0327,3.92697 0.20171,5.42027 1.38324,9.56871 2.09439,14.56252 1.28834,10.68834 2.36788,19.54832 1.70169,27.78333 -0.64789,3.10534 -2.93516,5.94534 -4.97417,7.91939 l -0.35997,6.4795 c -9.19102,0.76149 -18.44352,2.1559 -27.68515,4.25422 -39.76672,9.02908 -74.00517,29.5131 -100.07232,57.17016 -1.69145,-1.15393 -4.65062,-3.27681 -5.53054,-3.92697 -2.7344,0.36926 -5.49798,1.21295 -9.09748,-0.88357 -6.85378,-4.61354 -13.09606,-10.98183 -20.64933,-18.65311 -3.46095,-3.66956 -5.96724,-7.16386 -10.07923,-10.701 -0.9338,-0.80327 -2.35888,-1.88971 -3.40337,-2.71616 -3.21476,-2.56307 -7.00645,-3.89976 -10.66827,-4.02514 -4.70807,-0.16121 -9.24037,1.67954 -12.20634,5.39958 -5.27283,6.61342 -3.58466,16.72163 3.76335,22.58009 0.0746,0.0594 0.15396,0.10554 0.22907,0.16362 1.00973,0.81851 2.24619,1.86728 3.1743,2.55254 4.36352,3.22174 8.34948,4.87096 12.69721,7.42852 9.15979,5.65673 16.75337,10.34716 22.77644,16.00241 2.35201,2.50715 2.7631,6.925 3.07612,8.83568 l 4.90872,4.38512 c -26.27764,39.54584 -38.43915,88.39294 -31.2521,138.16395 l -6.41405,1.86531 c -1.69048,2.18299 -4.07925,5.61791 -6.57773,6.64313 -7.88026,2.48206 -16.74905,3.39352 -27.45608,4.51601 -5.02684,0.41799 -9.36418,0.16855 -14.69342,1.17809 -1.17293,0.2222 -2.80722,0.64798 -4.09059,0.94902 -0.0446,0.009 -0.0863,0.0226 -0.1309,0.0327 -0.07,0.0162 -0.16185,0.0502 -0.22907,0.0654 -9.02695,2.18109 -14.82588,10.47821 -12.95901,18.65312 1.86731,8.17682 10.68465,13.14935 19.76576,11.19187 0.0656,-0.015 0.16074,-0.0175 0.22907,-0.0327 0.10252,-0.0235 0.19278,-0.0732 0.29452,-0.0981 1.2659,-0.27788 2.85232,-0.58705 3.9597,-0.88357 5.23946,-1.40285 9.03407,-3.46407 13.7444,-5.26868 10.13362,-3.63457 18.52665,-6.67085 26.70341,-7.85395 3.41508,-0.26747 7.01316,2.10712 8.80296,3.10886 l 6.67585,-1.14537 c 15.3625,47.62926 47.55736,86.12636 88.32413,110.28245 l -2.7816,6.67585 c 1.0026,2.59224 2.10843,6.09958 1.36158,8.65957 -2.97265,7.70859 -8.0644,15.84504 -13.86244,24.91604 -2.80737,4.19078 -5.68053,7.44303 -8.21392,12.23906 -0.60622,1.14761 -1.37829,2.91048 -1.96348,4.12332 -3.93623,8.4219 -1.04891,18.12187 6.51223,21.76197 7.60863,3.66295 17.05297,-0.20037 21.14019,-8.63934 0.006,-0.0119 0.0269,-0.0207 0.0327,-0.0327 0.004,-0.009 -0.004,-0.0236 0,-0.0327 0.58217,-1.19647 1.40694,-2.76916 1.89804,-3.89424 2.16992,-4.97105 2.89194,-9.23107 4.41784,-14.03893 4.05224,-10.17885 6.27862,-20.85905 11.85692,-27.51404 1.52752,-1.82236 4.01788,-2.52321 6.59985,-3.21451 l 3.46882,-6.28315 c 35.53987,13.64156 75.32106,17.30219 115.06027,8.27936 9.06551,-2.05833 17.81739,-4.72226 26.27798,-7.91939 0.97492,1.72926 2.78672,5.05344 3.27248,5.89046 2.62384,0.85365 5.48775,1.29447 7.82122,4.74509 4.17347,7.13031 7.0276,15.56563 10.50465,25.75439 1.52615,4.80777 2.28038,9.06798 4.45057,14.03892 0.49463,1.13301 1.31527,2.72779 1.89803,3.92697 4.07863,8.46638 13.55289,12.34291 21.17292,8.67206 7.56021,-3.64203 10.45071,-13.34112 6.51223,-21.76196 -0.58526,-1.2128 -1.38994,-2.97575 -1.99621,-4.12332 -2.53364,-4.79589 -5.40634,-8.01572 -8.21392,-12.20634 -5.79852,-9.0707 -10.60772,-16.60606 -13.58077,-24.3145 -1.24313,-3.97574 0.20973,-6.44834 1.17809,-9.03203 -0.57991,-0.66473 -1.82087,-4.41925 -2.55253,-6.18498 42.36668,-25.0155 73.61612,-64.94823 88.29141,-111.06785 1.9817,0.31146 5.42607,0.92086 6.54495,1.14537 2.30334,-1.51916 4.42118,-3.50131 8.57389,-3.1743 8.17681,1.18266 16.5696,4.2199 26.7034,7.85394 4.71043,1.80438 8.50488,3.89883 13.7444,5.30141 1.1074,0.29645 2.69378,0.57303 3.9597,0.85085 0.10179,0.0249 0.19195,0.0748 0.29452,0.0981 0.0684,0.0153 0.16352,0.0177 0.22908,0.0327 9.08163,1.95506 17.90054,-3.01456 19.76575,-11.19187 1.86478,-8.17539 -3.93147,-16.47444 -12.959,-18.65311 -1.31311,-0.29859 -3.17535,-0.80569 -4.45057,-1.0472 -5.32929,-1.00926 -9.66655,-0.76036 -14.69342,-1.17809 -10.70708,-1.12194 -19.57569,-2.03437 -27.45607,-4.51601 -3.21306,-1.24646 -5.49884,-5.06971 -6.61046,-6.64313 l -6.18498,-1.79986 c 3.20678,-23.19994 2.3421,-47.34497 -3.20703,-71.50361 -5.60079,-24.38357 -15.49883,-46.68472 -28.69961,-66.33309 1.58655,-1.44229 4.58271,-4.09548 5.43231,-4.87599 0.24835,-2.74801 0.035,-5.62922 2.87978,-8.67206 6.02276,-5.65557 13.61694,-10.3452 22.77643,-16.00241 4.3476,-2.55779 8.36659,-4.20655 12.72993,-7.42852 0.98672,-0.7286 2.33409,-1.88243 3.37065,-2.71616 7.34646,-5.86043 9.03788,-15.96803 3.76335,-22.58009 -5.27453,-6.61205 -15.49543,-7.23487 -22.84188,-1.37444 -1.04569,0.82818 -2.4646,1.90853 -3.40338,2.71616 -4.1118,3.53737 -6.65119,7.03126 -10.11195,10.701 -7.55286,7.67168 -13.79578,14.07193 -20.64932,18.68584 -2.96985,1.72897 -7.31984,1.13073 -9.29389,1.01446 l -5.82501,4.15605 C 500.27311,376.86318 455.0492,354.59475 406.3533,350.26897 c -0.1362,-2.04069 -0.31463,-5.72937 -0.35997,-6.83948 -1.99355,-1.90762 -4.40179,-3.53622 -5.00689,-7.65759 -0.66619,-8.23501 0.44607,-17.09499 1.73441,-27.78333 0.71115,-4.99381 1.89268,-9.14225 2.09439,-14.56252 0.0459,-1.23215 -0.0277,-3.02011 -0.0327,-4.35239 -10e-4,-9.39759 -6.85705,-17.01772 -15.31518,-17.01687 z m -19.17671,118.79088 -4.54874,80.33929 -0.32725,0.16363 c -0.30509,7.18725 -6.22028,12.92628 -13.4826,12.92628 -2.97487,0 -5.72075,-0.95534 -7.95212,-2.58526 l -0.1309,0.0654 -65.87494,-46.69823 c 20.24605,-19.90834 46.14234,-34.62059 75.9869,-41.39683 5.45167,-1.23781 10.90091,-2.15627 16.32965,-2.81433 z m 38.38615,0 c 34.84372,4.28545 67.06745,20.06297 91.76023,44.24388 l -65.44952,46.40371 -0.22908,-0.0981 c -5.80924,4.2429 -13.99408,3.19016 -18.52221,-2.48708 -1.85491,-2.32577 -2.82817,-5.06044 -2.94523,-7.82122 l -0.0655,-0.0327 z m -154.59178,74.21976 60.14811,53.79951 -0.0654,0.32725 c 5.42904,4.71967 6.22963,12.90973 1.70169,18.58767 -1.85478,2.32586 -4.33755,3.88585 -7.0031,4.61419 l -0.0654,0.2618 -77.09954,22.25283 c -3.92412,-35.88222 4.53283,-70.7626 22.38374,-99.84325 z m 270.33926,0.0327 c 8.93685,14.48535 15.70428,30.66403 19.73304,48.20357 3.98044,17.32923 4.97939,34.62748 3.33792,51.34515 l -77.49224,-22.31828 -0.0654,-0.32725 c -6.93922,-1.89651 -11.20383,-8.95519 -9.58835,-16.03514 0.66186,-2.90032 2.20143,-5.35391 4.28694,-7.16672 l -0.0327,-0.16362 59.82087,-53.53771 z M 377.13006,523.023 h 24.64174 l 15.31519,19.14398 -5.49776,23.88908 -22.12194,10.63555 -22.18739,-10.66828 -5.49776,-23.88907 z m 78.99757,65.51497 c 1.04717,-0.0529 2.08976,0.0415 3.10886,0.22907 l 0.1309,-0.16362 79.75024,13.4826 c -11.67148,32.79084 -34.00528,61.19811 -63.84601,80.20839 l -30.95762,-74.77608 0.0981,-0.1309 c -2.84377,-6.60777 0.002,-14.35654 6.54495,-17.50774 1.67514,-0.80677 3.42525,-1.2535 5.17051,-1.34172 z m -133.94245,0.32725 c 6.08601,0.0853 11.5449,4.30946 12.95901,10.50465 0.66202,2.90028 0.33981,5.77395 -0.75267,8.31209 l 0.22907,0.29452 -30.63038,74.02341 C 275.35248,663.62313 252.54242,636.1077 240.34055,602.34787 l 79.06303,-13.41715 0.1309,0.16362 c 0.88436,-0.16274 1.78127,-0.24127 2.6507,-0.22907 z m 66.79124,32.43029 c 2.11999,-0.0779 4.27113,0.35707 6.31588,1.34172 2.6803,1.29069 4.75083,3.32294 6.05408,5.75955 h 0.29452 l 38.9752,70.42369 c -5.05825,1.69565 -10.25839,3.1448 -15.57699,4.3524 -29.80784,6.7679 -59.52097,4.71725 -86.4261,-4.45057 l 38.87702,-70.29279 h 0.0654 c 2.3328,-4.36094 6.75698,-6.96265 11.42094,-7.134 z"
         style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:Sans;-inkscape-font-specification:Sans;text-indent:0;text-align:start;text-decoration:none;text-decoration-line:none;letter-spacing:normal;word-spacing:normal;text-transform:none;writing-mode:lr-tb;direction:ltr;baseline-shift:baseline;text-anchor:start;display:inline;overflow:visible;visibility:visible;fill:#ffffff;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;marker:none;enable-background:accumulate"
         sodipodi:nodetypes="ccccccccsccccscssccsccccccccscccsccccccccccccccscccscsccsccccscscsccccccccscccscsccccsccccscscscccccccccccccccscccsccccccccccccscccccscccccccccccccccccccccccscccscccccccccscccscccc"
         inkscape:export-filename="./path3059.png"
         inkscape:export-xdpi="250.55"
         inkscape:export-ydpi="250.55" /></g><g
       style="font-style:normal;font-weight:normal;font-size:40px;line-height:125%;font-family:Sans;letter-spacing:0px;word-spacing:0px;fill:#659843;fill-opacity:1;stroke:none;fill-rule:nonzero"
       id="text4373"
       transform="translate(827.98624,429.30948)"><path
         d="m 36.220121,374.76552 c 1.979968,-2.15995 4.004966,-4.40995 6.075,-6.75 2.159962,-2.33995 4.22996,-4.63494 6.21,-6.885 1.979956,-2.33994 3.824954,-4.54494 5.535,-6.615 1.799951,-2.06993 3.329949,-3.86993 4.59,-5.4 h 23.895 c -4.770071,5.49006 -9.450067,10.75506 -14.04,15.795 -4.500057,4.95005 -9.450053,10.08004 -14.85,15.39 2.69995,2.43004 5.489947,5.35503 8.37,8.775 2.879942,3.33003 5.669939,6.79502 8.37,10.395 2.699933,3.60002 5.174931,7.20001 7.425,10.8 2.249926,3.60001 4.139925,6.885 5.67,9.855 h -23.085 c -1.440052,-2.34 -3.105051,-4.905 -4.995,-7.695 -1.800047,-2.87999 -3.735045,-5.71499 -5.805,-8.505 -2.070041,-2.87998 -4.275039,-5.62498 -6.615,-8.235 -2.250034,-2.60997 -4.500032,-4.81497 -6.75,-6.615 v 31.05 h -20.115 v -101.52 l 20.115,-3.24 v 59.4"
         style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:135px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu Bold';fill:#659843;fill-opacity:1;fill-rule:nonzero"
         id="path2985" /><path
         d="m 153.44864,417.69552 c -3.42007,0.99 -7.83007,1.89 -13.23,2.7 -5.40005,0.9 -11.07005,1.35 -17.01,1.35 -6.03004,0 -11.07003,-0.81 -15.12,-2.43 -3.96002,-1.62 -7.11002,-3.87 -9.450004,-6.75 -2.340012,-2.96999 -4.005011,-6.47999 -4.995,-10.53 -0.990009,-4.04998 -1.485008,-8.50497 -1.485,-13.365 v -39.555 h 20.115004 v 37.125 c -3e-5,6.48003 0.85497,11.16002 2.565,14.04 1.70996,2.88002 4.90496,4.32001 9.585,4.32 1.43995,10e-6 2.96995,-0.045 4.59,-0.135 1.61995,-0.17999 3.05995,-0.35999 4.32,-0.54 v -54.81 h 20.115 v 68.58"
         style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:135px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu Bold';fill:#659843;fill-opacity:1;fill-rule:nonzero"
         id="path2987" /><path
         d="m 217.95754,384.08052 c -5e-5,-12.95995 -4.77005,-19.43995 -14.31,-19.44 -2.07004,5e-5 -4.14003,0.27005 -6.21,0.81 -1.98003,0.54005 -3.60003,1.21505 -4.86,2.025 v 36.585 c 0.98997,0.18001 2.24997,0.36001 3.78,0.54 1.52997,0.09 3.19497,0.13501 4.995,0.135 5.48996,10e-6 9.62995,-1.88998 12.42,-5.67 2.78995,-3.77998 4.18495,-8.77497 4.185,-14.985 m 20.52,0.54 c -7e-5,5.67003 -0.85507,10.80002 -2.565,15.39 -1.62007,4.59001 -4.00507,8.50501 -7.155,11.745 -3.15006,3.24 -7.02006,5.76 -11.61,7.56 -4.59005,1.71 -9.81004,2.565 -15.66,2.565 -2.43003,0 -4.99503,-0.135 -7.695,-0.405 -2.61003,-0.18 -5.22002,-0.45 -7.83,-0.81 -2.52002,-0.36 -4.95002,-0.765 -7.29,-1.215 -2.34001,-0.54 -4.41001,-1.08 -6.21,-1.62 v -99.225 l 20.115,-3.24 v 35.37 c 2.24997,-0.98993 4.58997,-1.75493 7.02,-2.295 2.42996,-0.53993 5.03996,-0.80993 7.83,-0.81 5.03995,7e-5 9.49495,0.90007 13.365,2.7 3.86994,1.71007 7.10994,4.18506 9.72,7.425 2.60993,3.24006 4.58993,7.15505 5.94,11.745 1.34993,4.50004 2.02493,9.54004 2.025,15.12"
         style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:135px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu Bold';fill:#659843;fill-opacity:1;fill-rule:nonzero"
         id="path2989" /><path
         d="m 250.56215,385.16052 c 0,-6.29996 0.945,-11.78995 2.835,-16.47 1.97999,-4.76994 4.54499,-8.72994 7.695,-11.88 3.14998,-3.14993 6.74998,-5.53493 10.8,-7.155 4.13997,-1.61993 8.36997,-2.42993 12.69,-2.43 10.07995,7e-5 18.04494,3.10507 23.895,9.315 5.84993,6.12006 8.77493,15.16505 8.775,27.135 -7e-5,1.17003 -0.0451,2.47503 -0.135,3.915 -0.0901,1.35003 -0.18007,2.56503 -0.27,3.645 h -45.63 c 0.44997,4.14002 2.38497,7.42502 5.805,9.855 3.41997,2.43002 8.00996,3.64501 13.77,3.645 3.68995,10e-6 7.28995,-0.31499 10.8,-0.945 3.59994,-0.71998 6.52494,-1.57498 8.775,-2.565 l 2.7,16.335 c -1.08007,0.54 -2.52006,1.08 -4.32,1.62 -1.80006,0.54 -3.82506,0.99 -6.075,1.35 -2.16005,0.45 -4.50005,0.81 -7.02,1.08 -2.52005,0.27 -5.04004,0.405 -7.56,0.405 -6.39004,0 -11.97003,-0.945 -16.74,-2.835 -4.68002,-1.89 -8.59502,-4.455 -11.745,-7.695 -3.06001,-3.32999 -5.35501,-7.24499 -6.885,-11.745 -1.44,-4.49998 -2.16,-9.35997 -2.16,-14.58 m 47.25,-7.695 c -0.09,-1.70996 -0.40505,-3.37496 -0.945,-4.995 -0.45005,-1.61995 -1.21505,-3.05995 -2.295,-4.32 -0.99005,-1.25995 -2.29505,-2.29495 -3.915,-3.105 -1.53004,-0.80995 -3.46504,-1.21494 -5.805,-1.215 -2.25004,6e-5 -4.18503,0.40505 -5.805,1.215 -1.62003,0.72005 -2.97003,1.71005 -4.05,2.97 -1.08003,1.26005 -1.93503,2.74505 -2.565,4.455 -0.54003,1.62004 -0.94502,3.28504 -1.215,4.995 h 26.595"
         style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:135px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu Bold';fill:#659843;fill-opacity:1;fill-rule:nonzero"
         id="path2991" /><path
         d="m 375.57004,366.93552 c -1.80005,-0.44995 -3.91505,-0.89995 -6.345,-1.35 -2.43004,-0.53995 -5.04004,-0.80995 -7.83,-0.81 -1.26003,5e-5 -2.79003,0.13505 -4.59,0.405 -1.71003,0.18005 -3.01503,0.40505 -3.915,0.675 v 54.27 h -20.115 v -67.23 c 3.59999,-1.25993 7.82999,-2.42993 12.69,-3.51 4.94998,-1.16993 10.43997,-1.75493 16.47,-1.755 1.07996,7e-5 2.38496,0.0901 3.915,0.27 1.52996,0.0901 3.05996,0.27007 4.59,0.54 1.52995,0.18007 3.05995,0.45007 4.59,0.81 1.52995,0.27007 2.83495,0.63007 3.915,1.08 l -3.375,16.605"
         style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:135px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu Bold';fill:#659843;fill-opacity:1;fill-rule:nonzero"
         id="path2993" /><path
         d="m 389.72817,351.54552 c 3.41998,-0.98993 7.82998,-1.88993 13.23,-2.7 5.39997,-0.89993 11.06996,-1.34993 17.01,-1.35 6.02995,7e-5 11.02495,0.81007 14.985,2.43 4.04994,1.53007 7.24494,3.73507 9.585,6.615 2.33993,2.88006 4.00493,6.30006 4.995,10.26 0.98993,3.96005 1.48493,8.37004 1.485,13.23 v 40.095 h -20.115 v -37.665 c -5e-5,-6.47996 -0.85505,-11.06995 -2.565,-13.77 -1.71005,-2.69995 -4.90505,-4.04995 -9.585,-4.05 -1.44004,5e-5 -2.97004,0.0901 -4.59,0.27 -1.62003,0.09 -3.06003,0.22505 -4.32,0.405 v 54.81 h -20.115 v -68.58"
         style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:135px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu Bold';fill:#659843;fill-opacity:1;fill-rule:nonzero"
         id="path2995" /><path
         d="m 465.98207,385.16052 c 0,-6.29996 0.945,-11.78995 2.835,-16.47 1.97999,-4.76994 4.54499,-8.72994 7.695,-11.88 3.14998,-3.14993 6.74998,-5.53493 10.8,-7.155 4.13997,-1.61993 8.36997,-2.42993 12.69,-2.43 10.07995,7e-5 18.04495,3.10507 23.895,9.315 5.84993,6.12006 8.77493,15.16505 8.775,27.135 -7e-5,1.17003 -0.0451,2.47503 -0.135,3.915 -0.0901,1.35003 -0.18007,2.56503 -0.27,3.645 h -45.63 c 0.44998,4.14002 2.38497,7.42502 5.805,9.855 3.41997,2.43002 8.00996,3.64501 13.77,3.645 3.68995,10e-6 7.28995,-0.31499 10.8,-0.945 3.59994,-0.71998 6.52494,-1.57498 8.775,-2.565 l 2.7,16.335 c -1.08006,0.54 -2.52006,1.08 -4.32,1.62 -1.80006,0.54 -3.82506,0.99 -6.075,1.35 -2.16005,0.45 -4.50005,0.81 -7.02,1.08 -2.52004,0.27 -5.04004,0.405 -7.56,0.405 -6.39003,0 -11.97003,-0.945 -16.74,-2.835 -4.68002,-1.89 -8.59501,-4.455 -11.745,-7.695 -3.06001,-3.32999 -5.35501,-7.24499 -6.885,-11.745 -1.44,-4.49998 -2.16,-9.35997 -2.16,-14.58 m 47.25,-7.695 c -0.0901,-1.70996 -0.40505,-3.37496 -0.945,-4.995 -0.45005,-1.61995 -1.21505,-3.05995 -2.295,-4.32 -0.99005,-1.25995 -2.29504,-2.29495 -3.915,-3.105 -1.53004,-0.80995 -3.46504,-1.21494 -5.805,-1.215 -2.25003,6e-5 -4.18503,0.40505 -5.805,1.215 -1.62003,0.72005 -2.97003,1.71005 -4.05,2.97 -1.08003,1.26005 -1.93502,2.74505 -2.565,4.455 -0.54002,1.62004 -0.94502,3.28504 -1.215,4.995 h 26.595"
         style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:135px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu Bold';fill:#659843;fill-opacity:1;fill-rule:nonzero"
         id="path2997" /><path
         d="m 547.51996,331.43052 20.115,-3.24 v 20.925 h 24.165 v 16.74 h -24.165 v 24.975 c -2e-5,4.23002 0.71997,7.60502 2.16,10.125 1.52997,2.52002 4.54497,3.78001 9.045,3.78 2.15996,10e-6 4.36496,-0.17999 6.615,-0.54 2.33996,-0.44998 4.45495,-1.03498 6.345,-1.755 l 2.835,15.66 c -2.43005,0.99 -5.13005,1.845 -8.1,2.565 -2.97004,0.72 -6.61504,1.08 -10.935,1.08 -5.49003,0 -10.03502,-0.72 -13.635,-2.16 -3.60002,-1.53 -6.48001,-3.6 -8.64,-6.21 -2.16001,-2.69999 -3.69001,-5.93999 -4.59,-9.72 -0.81,-3.77998 -1.215,-7.96498 -1.215,-12.555 v -59.67"
         style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:135px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu Bold';fill:#659843;fill-opacity:1;fill-rule:nonzero"
         id="path2999" /><path
         d="m 602.03676,385.16052 c 0,-6.29996 0.94499,-11.78995 2.835,-16.47 1.97999,-4.76994 4.54499,-8.72994 7.695,-11.88 3.14998,-3.14993 6.74998,-5.53493 10.8,-7.155 4.13997,-1.61993 8.36997,-2.42993 12.69,-2.43 10.07995,7e-5 18.04494,3.10507 23.895,9.315 5.84993,6.12006 8.77493,15.16505 8.775,27.135 -7e-5,1.17003 -0.0451,2.47503 -0.135,3.915 -0.0901,1.35003 -0.18007,2.56503 -0.27,3.645 h -45.63 c 0.44997,4.14002 2.38497,7.42502 5.805,9.855 3.41997,2.43002 8.00996,3.64501 13.77,3.645 3.68995,10e-6 7.28995,-0.31499 10.8,-0.945 3.59994,-0.71998 6.52494,-1.57498 8.775,-2.565 l 2.7,16.335 c -1.08007,0.54 -2.52006,1.08 -4.32,1.62 -1.80006,0.54 -3.82506,0.99 -6.075,1.35 -2.16005,0.45 -4.50005,0.81 -7.02,1.08 -2.52005,0.27 -5.04004,0.405 -7.56,0.405 -6.39004,0 -11.97003,-0.945 -16.74,-2.835 -4.68002,-1.89 -8.59502,-4.455 -11.745,-7.695 -3.06001,-3.32999 -5.35501,-7.24499 -6.885,-11.745 -1.44001,-4.49998 -2.16,-9.35997 -2.16,-14.58 m 47.25,-7.695 c -0.09,-1.70996 -0.40505,-3.37496 -0.945,-4.995 -0.45005,-1.61995 -1.21505,-3.05995 -2.295,-4.32 -0.99005,-1.25995 -2.29505,-2.29495 -3.915,-3.105 -1.53004,-0.80995 -3.46504,-1.21494 -5.805,-1.215 -2.25004,6e-5 -4.18503,0.40505 -5.805,1.215 -1.62003,0.72005 -2.97003,1.71005 -4.05,2.97 -1.08003,1.26005 -1.93503,2.74505 -2.565,4.455 -0.54003,1.62004 -0.94503,3.28504 -1.215,4.995 h 26.595"
         style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:135px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu Bold';fill:#659843;fill-opacity:1;fill-rule:nonzero"
         id="path3001" /><path
         d="m 704.63465,405.68052 c 3.68997,10e-6 6.29997,-0.35999 7.83,-1.08 1.52996,-0.71998 2.29496,-2.11498 2.295,-4.185 -4e-5,-1.61998 -0.99004,-3.01498 -2.97,-4.185 -1.98003,-1.25998 -4.99503,-2.65497 -9.045,-4.185 -3.15002,-1.16997 -6.03002,-2.38497 -8.64,-3.645 -2.52001,-1.25997 -4.68001,-2.74497 -6.48,-4.455 -1.80001,-1.79996 -3.19501,-3.91496 -4.185,-6.345 -0.99001,-2.42996 -1.48501,-5.35495 -1.485,-8.775 -10e-6,-6.65994 2.47499,-11.92494 7.425,-15.795 4.94998,-3.86993 11.74498,-5.80493 20.385,-5.805 4.31996,7e-5 8.45996,0.40507 12.42,1.215 3.95995,0.72007 7.10995,1.53007 9.45,2.43 l -3.51,15.66 c -2.34005,-0.80995 -4.90505,-1.52995 -7.695,-2.16 -2.70004,-0.62994 -5.76004,-0.94494 -9.18,-0.945 -6.30003,6e-5 -9.45002,1.75505 -9.45,5.265 -2e-5,0.81005 0.13497,1.53005 0.405,2.16 0.26997,0.63005 0.80997,1.26005 1.62,1.89 0.80997,0.54005 1.88997,1.17005 3.24,1.89 1.43997,0.63004 3.23997,1.35004 5.4,2.16 4.40996,1.62004 8.05496,3.24004 10.935,4.86 2.87995,1.53004 5.12995,3.24003 6.75,5.13 1.70995,1.80003 2.87994,3.82503 3.51,6.075 0.71994,2.25002 1.07994,4.86002 1.08,7.83 -6e-5,7.02001 -2.65506,12.33001 -7.965,15.93 -5.22004,3.6 -12.64504,5.4 -22.275,5.4 -6.30002,0 -11.56502,-0.54 -15.795,-1.62 -4.14001,-1.08 -7.02,-1.98 -8.64,-2.7 l 3.375,-16.335 c 3.41999,1.35002 6.92999,2.43002 10.53,3.24 3.59998,0.72001 7.15498,1.08001 10.665,1.08"
         style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:135px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu Bold';fill:#659843;fill-opacity:1;fill-rule:nonzero"
         id="path3003" /></g></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
